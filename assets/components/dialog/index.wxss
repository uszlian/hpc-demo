.dialogDim {
  background-color: #00000030;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
}

.dialog {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  border-radius: 16rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: white;
}

.dialogCenter {
  position: fixed;
  /* 750x1478 / 2 -  600 x 500 / 2 = left top*/
  left: 75rpx;
  top: 489rpx;
  width: 600rpx;
  height: 500rpx;
}

.dialogBottom {
  position: fixed;
  top: unset;
  left: unset;
  bottom: 0rpx;
  width: 100%;
  height: 687rpx;
}

.bottomAnimIn {
  /* 动画名称 动画时长 延时时间 匀速 无限循环 逆播 */
  animation: bottomAnimIn 0.3s 0s cubic-bezier(0, 0, 0.27, 1);
  animation-fill-mode: forwards;
}

@keyframes bottomAnimIn {
  from {
    transform: translateY(100%)
  }

  to {
    transform: translateY(0rpx)
  }
}

.bottomAnimOut {
  /* 动画名称 动画时长 延时时间 匀速 无限循环 逆播 */
  animation: bottomAnimOut 0.2s 0s cubic-bezier(0.27, 0, 1, 1);
  animation-fill-mode: forwards;
}

@keyframes bottomAnimOut {
  from {
    transform: translateY(0rpx)
  }

  to {
    transform: translateY(100%)
  }
}

.centerAnimIn {
  /* 动画名称 动画时长 延时时间 匀速 无限循环 逆播 */
  animation: centerAnimIn 0.2s 0s cubic-bezier(0, 0, 0.27, 1);
  animation-fill-mode: forwards;
}

@keyframes centerAnimIn {
  from {
    transform: scale(0.7, 0.7) translateY(100rpx);
    opacity: 0.3;
  }

  to {
    transform: scale(1, 1) translateY(0rpx);
    opacity: 1;
  }
}

.centerAnimOut {
  /* 动画名称 动画时长 延时时间 匀速 无限循环 逆播 */
  animation: centerAnimOut 0.2s 0s cubic-bezier(0.27, 0, 1, 1);
  animation-fill-mode: forwards;
}

@keyframes centerAnimOut {
  from {
    transform: scale(1, 1) translateY(0rpx);
    opacity: 1;
  }

  99% {
    transform: scale(0.7, 0.7);
  }

  to {
    transform: scale(0, 0) translateY(100rpx);
    opacity: 0;
  }
}